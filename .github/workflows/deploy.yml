name: Build and Deploy Docker image to AWS ECR and deploy to EC2

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      TAG: ${{ github.sha }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose

      - name: List files in the directory
        run: ls -la

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2

      - name: Download .env from S3
        run: |
          aws s3 cp s3://yochambeo.env/.env .env
        continue-on-error: true

      - name: Verify .env file download
        run: |
          if [ ! -f .env ]; then
            echo ".env file not found!"
            exit 1
          else
            echo ".env file downloaded successfully."
          fi

      - name: Build Docker image and set Docker tag with TAG
        run: |
          echo "Generated Docker tag: $TAG"
          docker-compose build backend
          docker tag "yochambeo/back" "861276100483.dkr.ecr.us-east-2.amazonaws.com/yochambeo/back:${TAG}"

      - name: List Docker images
        run: |
          echo "Listing Docker images:"
          docker images

      - name: Login to Amazon ECR
        run: |
          aws ecr get-login-password --region us-east-2 | docker login --username AWS --password-stdin 861276100483.dkr.ecr.us-east-2.amazonaws.com

      - name: Push Docker image to Amazon ECR
        run: |
          docker push "861276100483.dkr.ecr.us-east-2.amazonaws.com/yochambeo/back:${TAG}"

      - name: Set up SSH key
        run: |
          echo "${{ secrets.EC2_SSH_PRIVATE_KEY }}" > /tmp/ec2_key.pem
          chmod 600 /tmp/ec2_key.pem

      - name: SSH into EC2 instance and deploy
        run: |
          ssh -i /tmp/ec2_key.pem -o StrictHostKeyChecking=no ubuntu@ec2-3-16-113-94.us-east-2.compute.amazonaws.com << EOF
            echo "Stop the current running container if exists.."
            docker-compose down

            echo "Pulling the new Docker image..."
            aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin ${{ secrets.AWS_REGISTRY_URL }}
            docker pull "${{ secrets.AWS_REGISTRY_URL }}/${{ secrets.REPOSITORY_NAME }}:${{ env.TAG }}"

            echo "Running the new container..."
            docker-compose up -d
          EOF
